Title: Structure

----

Excerpt:

Structured data input, which stores data in a field as YAML.

----

Text:

The structure field makes it possible to add multiple complex entries to a field, which will be stored as YAML. A typical use case would be a list of addresses or team members.

## Example

```
fields:
  addresses:
    label: Addresses
    type: structure
    entry: >
      {{street}}<br />
      {{zip}} {{city}}
    fields:
      street:
        label: Street
        type: text
      zip:
        label: ZIP
        type: text
      city:
        label: City
        type: text

```

Such a structure will be stored in the content file like this:

```
addresses:
-
  street: Rue de WTF 17
  zip:    1112
  city:   Monaco
-
  street: 1212 Broadway
  zip:    4321
  city:   New York
-
  street: At the beach
  zip:    9999
  city:   The capitol of the Bahamas
```

### Fields

You can define any number of fields and use the same field types listed in the menu on the left. The only exception is a structure field nested in a structure field.

### Site Template

Site Template

Kirby itself has no knowledge of the structure field. As a result, when you use it in your templates all you have is the raw, YAML formatted data. To convert to a PHP array, call the `yaml` method on the structure data.

```
$structureItems = $page->structureField()->yaml();
```

Then you can loop through the array and echo the individual fields.

```
foreach($structureItems as $item) {
  echo $item["field"];
}
```

### Entry template

You can use the `entry` option to define how the entries will be displayed in the list view. The syntax for entry templates is very simple. Double curly brackets define a variable and will be replaced with the appropriate content.

